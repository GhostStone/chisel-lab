FIRRTL version 1.1.0
circuit CountSevenSeg :
  module CountSevenSeg :
    input clock : Clock
    input reset : UInt<1>
    output io_seg : UInt<7>
    output io_an : UInt<4>

    reg cntReg : UInt<4>, clock with :
      reset => (UInt<1>("h0"), cntReg) @[CountSevenSeg.scala 15:24]
    node _cntReg_T = add(cntReg, UInt<1>("h1")) @[CountSevenSeg.scala 17:20]
    node _cntReg_T_1 = tail(_cntReg_T, 1) @[CountSevenSeg.scala 17:20]
    node _T = eq(cntReg, UInt<4>("hf")) @[CountSevenSeg.scala 19:15]
    node _GEN_0 = mux(_T, UInt<1>("h0"), _cntReg_T_1) @[CountSevenSeg.scala 17:10 19:27 20:12]
    node _T_1 = eq(UInt<1>("h0"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_2 = eq(UInt<1>("h1"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_3 = eq(UInt<2>("h2"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_4 = eq(UInt<2>("h3"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_5 = eq(UInt<3>("h4"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_6 = eq(UInt<3>("h5"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_7 = eq(UInt<3>("h6"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_8 = eq(UInt<3>("h7"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_9 = eq(UInt<4>("h8"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_10 = eq(UInt<4>("h9"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_11 = eq(UInt<4>("ha"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_12 = eq(UInt<4>("hb"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_13 = eq(UInt<4>("hc"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_14 = eq(UInt<4>("hd"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_15 = eq(UInt<4>("he"), cntReg) @[CountSevenSeg.scala 23:17]
    node _T_16 = eq(UInt<4>("hf"), cntReg) @[CountSevenSeg.scala 23:17]
    node _GEN_1 = mux(_T_16, UInt<7>("h71"), UInt<7>("h7f")) @[CountSevenSeg.scala 23:17 71:14 11:27]
    node _GEN_2 = mux(_T_15, UInt<7>("h79"), _GEN_1) @[CountSevenSeg.scala 23:17 68:14]
    node _GEN_3 = mux(_T_14, UInt<7>("h5e"), _GEN_2) @[CountSevenSeg.scala 23:17 65:14]
    node _GEN_4 = mux(_T_13, UInt<6>("h39"), _GEN_3) @[CountSevenSeg.scala 23:17 62:14]
    node _GEN_5 = mux(_T_12, UInt<7>("h7c"), _GEN_4) @[CountSevenSeg.scala 23:17 59:14]
    node _GEN_6 = mux(_T_11, UInt<7>("h77"), _GEN_5) @[CountSevenSeg.scala 23:17 56:14]
    node _GEN_7 = mux(_T_10, UInt<7>("h6f"), _GEN_6) @[CountSevenSeg.scala 23:17 53:14]
    node _GEN_8 = mux(_T_9, UInt<7>("h7f"), _GEN_7) @[CountSevenSeg.scala 23:17 50:14]
    node _GEN_9 = mux(_T_8, UInt<3>("h7"), _GEN_8) @[CountSevenSeg.scala 23:17 47:14]
    node _GEN_10 = mux(_T_7, UInt<7>("h7d"), _GEN_9) @[CountSevenSeg.scala 23:17 44:14]
    node _GEN_11 = mux(_T_6, UInt<7>("h6d"), _GEN_10) @[CountSevenSeg.scala 23:17 41:14]
    node _GEN_12 = mux(_T_5, UInt<7>("h66"), _GEN_11) @[CountSevenSeg.scala 23:17 38:14]
    node _GEN_13 = mux(_T_4, UInt<7>("h4f"), _GEN_12) @[CountSevenSeg.scala 23:17 35:14]
    node _GEN_14 = mux(_T_3, UInt<7>("h5b"), _GEN_13) @[CountSevenSeg.scala 23:17 32:14]
    node _GEN_15 = mux(_T_2, UInt<3>("h6"), _GEN_14) @[CountSevenSeg.scala 23:17 29:14]
    node _GEN_16 = mux(_T_1, UInt<6>("h3f"), _GEN_15) @[CountSevenSeg.scala 23:17 26:14]
    node sevSeg = _GEN_16 @[CountSevenSeg.scala 11:27]
    node _io_seg_T = not(sevSeg) @[CountSevenSeg.scala 77:13]
    io_seg <= _io_seg_T @[CountSevenSeg.scala 77:10]
    io_an <= UInt<4>("he") @[CountSevenSeg.scala 78:9]
    cntReg <= mux(reset, UInt<4>("h0"), _GEN_0) @[CountSevenSeg.scala 15:{24,24}]
